{"path":"template","name":"template","markdown":"template page\n\n![](invalid-pre-proof.png)\n\nwiki.rs\n\nA simple wiki created with Rust from scratch.\n\n![Demo](./docs/wiki-rs-demo.png)\n\n# 特徴 { #3d9f7cb0-d48f-4a73-840f-ee94f0f9a000 }\n\n- レスポンシブ対応\n- ダークモード対応\n- 数式対応（`\\(\\)` で inline equation, `\\[\\]` で block）\n- ソースコードのシンタックスハイライトが可能\n- ソースコードのコピーができるボタンあり\n- データベース不要で，rust 環境さえあればすぐに導入可能\n  （DB は後から導入するかも知れない．要検討）\n- コメントアウト対応（`//` でコメントアウトする）\n\nこれから対応予定のもの\n\n- ユーザごとのプライベートなページ\n- github, youtube などの外部サイトとの連携\n  - ソースコードや動画の埋め込み表示\n\n# Development { #b9a463a5-0305-4fd6-9204-edc367577d50 }\n\n## Prerequisties { #f53b68f4-3824-4d89-b4ba-7cdb4b5fd2fc }\n\nInstall Cargo\n\n## Run { #4147f28e-b236-48ca-8a1f-c947d6c3d418 }\n\n1. サンプルの public directory が docs 以下にあるので，それを持ってくる．\n\n   ```sh\n   cp -r docs/public .\n   ```\n\n2. cargo で backend を実行する\n\n   ```sh\n   cargo run\n   ```\n\n3. and access <https://127.0.0.1:8443/> on your browser.\n\n# Design { #bc453f1a-37ee-4239-82c6-75dfabf58eea }\n\nとりあえずの architecture:\n\n- model\n  - page の型宣言をしておく\n  - markdown から page に変換したりするコードを置いておく\n- interface adapters :: controllers, presenters, gateways\n  - ページの更新や取得などを行うコードを書いておく\n- frameworks and drivers :: web, ui, external interfaces, devices, db\n\nclean architecture:\n\n- Enterprise business rules :: entities\n  - page の型宣言をしておく\n- application business rules :: use cases, interactor\n  - markdown から page に変換したりするコードを置いておく\n- interface adapters :: controllers, presenters, gateways\n  - ページの更新や取得などを行うコードを書いておく\n- frameworks and drivers :: web, ui, external interfaces, devices, db\n\n# API design { #ff6045d0-9143-4039-92f1-fa7c638ada38 }\n\n## Front { #cc76e1ba-513d-4ef1-acce-de70baf955dc }\n\n- 普通にアクセスして見る．\n- 今見ているページの markdown を編集して，それでページを更新する．\n  - edit button\n- 新しいページの markdown を編集して，それでページを更新する．\n  - create button\n\n## Backend API { #d5c6fb97-0108-4952-8f76-a3fe3e46dc7b }\n\n- GET `/page?path=<Path to the page>`\n  - `<Path to the page>` にある html ページを返す\n  - サーバ上のファイルから読み込む\n- GET `/edit?path=<Path to the page>`\n  - 編集用の markdown を返す\n  - サーバ上のファイルから読み込む\n- POST `/edit {path:\"<Path to the page>\", body: \"<The updated markdown>\"}`\n  - markdown を投げ，それで `<Path to the page>` を更新する\n  - そのページがもともと存在しない場合は新しく作る．\n  - サーバ上のファイルに書き出しておく\n- DELETE `/edit?path=<Path to the page>`\n  - `<Path to the page>` を消去する\n  - サーバ上のファイルは消去する\n\n## 構成 { #c5c52e29-ce86-4194-bf22-588aabd1538d }\n\n### client-side { #d0b1035d-1274-44c3-a22b-8000efc670e2 }\n\n```sh\npublic/\n├── assets/ # some assets files\n│   ├── dracula.css\n│   └── main.css\n├── edit/ # directory to save markdown files\n├── index.html # the root index.html file\n├── layouts/ # some template html files\n│   ├── edit.html\n│   └── page.html\n└── pages/ # directory to save the transformed html files\n```\n\n現在，\n`public/pages/*`, `public/edit/*` は廃止して，\n`public/db/*` に json ファイルを置くことにしている．\n\n- TODO: 後で上記のファイル構成の方にも反映する．\n\n### server-side { #4166f255-713d-4806-be87-d8f063d32813 }\n\nclean architecture を参考にしようともがいている\n（けどそもそも理解できていない）．\n\n- （けどそもそも理解できていない．．．\n\n参考資料：\n\n- https://qiita.com/nrslib/items/a5f902c4defc83bd46b8#%E7%9F%A2%E5%8D%B0%E3%81%AE%E6%96%B9%E5%90%91\n- https://nrslib.com/clean-architecture-with-java/#outline__6_3\n- https://gist.github.com/mpppk/609d592f25cab9312654b39f1b357c60\n- https://nrslib.com/clean-architecture-with-java/#outline__6_3\n\n```sh\nsrc\n├── controllers/ # client と通信する POST API\n│   ├── handle_page.rs\n│   ├── index.rs\n│   └── mod.rs\n├── entities/ # markdown to html converter などの補助関数とか\n│   ├── mod.rs\n│   └── pages.rs\n├── gateways # データベースもどき\n│   ├── mod.rs\n│   └── pages.rs\n├── lib.rs\n├── main.rs\n├── routes.rs\n├── usecases # ページのデータ構造の定義とか\n│   ├── mod.rs\n│   └── pages.rs\n└── util.rs\n```\n\n## TODOs { #b8b26436-74c1-47d6-846c-7f8bb113d131 }\n\n- [ ] clean architecture などをもとにアーキテクチャを再考する．\n- [ ] issue に挙げたものの解決\n\n# Demo { #c95d764f-fb3b-4bec-a4df-ac1aaba47c8c }\n\n![Demo](./docs/code-copy-button-demo.png)\n![Demo](./docs/demo-diary.png)\n","html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    <!-- google font -->\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Fira+Sans:wght@300&family=JetBrains+Mono:wght@300&family=Noto+Sans+JP:wght@300&display=swap\"\n      rel=\"stylesheet\"\n    />\n\n    <!-- highlight.js -->\n    <link rel=\"stylesheet\" href=\"/files/assets/dracula.css\" />\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/highlight.min.js\"></script>\n    <script>\n      hljs.highlightAll();\n    </script>\n\n    <!-- mathjax -->\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n    <script\n      type=\"text/javascript\"\n      id=\"MathJax-script\"\n      async\n      src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js\"\n    ></script>\n\n    <!-- custom css -->\n    <link rel=\"stylesheet\" href=\"/files/assets/main.css\" />\n\n    <title>template</title>\n  </head>\n  <body>\n    <div class=\"wrapper\">\n      <div class=\"wrapper\">\n        <div class=\"site-header\">\n          <div class=\"site-title\">template</div>\n        </div>\n      </div>\n\n      <!-- header menu bar -->\n      <div class=\"wrapper header-menu\">\n        <a href=\"/\" class=\"button\">HOME</a>\n        <a href=\"/edit?path=template\" class=\"button\">Update</a>\n        <form\n          action=\"/attach?path=template\"\n          method=\"post\"\n          enctype=\"multipart/form-data\"\n          class=\"form-hided\"\n        >\n          <label class=\"button\">\n            Attach\n            <input\n              id=\"btn-select-attach\"\n              type=\"file\"\n              multiple\n              name=\"file\"\n              class=\"input-hided\"\n            />\n          </label>\n          <!--\n          <button type=\"submit\" class=\"button\">Submit</button>\n          -->\n        </form>\n        <form action=\"/edit\" method=\"DELETE\">\n          <input\n            type=\"submit\"\n            id=\"btn-submit-delete\"\n            name=\"btn-submit-delete\"\n            value=\"Delete\"\n            class=\"button\"\n          />\n        </form>\n      </div>\n\n      <!-- side menu bar -->\n      <div class=\"sidebar\">\n        <ul>\n          {{ INDEX_UL }}\n        </ul>\n      </div>\n\n      <!-- body contents -->\n      <div class=\"body-contents\">\n        <div class=\"updated-date\">Last modified: 2022-05-09 10:46:47</div>\n        <div class=\"body\"><div class=\"menu collapse\"><ul>\n<li><a href=\"#3d9f7cb0-d48f-4a73-840f-ee94f0f9a000\">特徴</a></li>\n<li><a href=\"#b9a463a5-0305-4fd6-9204-edc367577d50\">Development</a>\n<ul>\n<li><a href=\"#f53b68f4-3824-4d89-b4ba-7cdb4b5fd2fc\">Prerequisties</a></li>\n<li><a href=\"#4147f28e-b236-48ca-8a1f-c947d6c3d418\">Run</a></li>\n</ul>\n</li>\n<li><a href=\"#bc453f1a-37ee-4239-82c6-75dfabf58eea\">Design</a></li>\n<li><a href=\"#ff6045d0-9143-4039-92f1-fa7c638ada38\">API design</a>\n<ul>\n<li><a href=\"#cc76e1ba-513d-4ef1-acce-de70baf955dc\">Front</a></li>\n<li><a href=\"#d5c6fb97-0108-4952-8f76-a3fe3e46dc7b\">Backend API</a></li>\n<li><a href=\"#c5c52e29-ce86-4194-bf22-588aabd1538d\">構成</a>\n<ul>\n<li><a href=\"#d0b1035d-1274-44c3-a22b-8000efc670e2\">client-side</a></li>\n<li><a href=\"#4166f255-713d-4806-be87-d8f063d32813\">server-side</a></li>\n</ul>\n</li>\n<li><a href=\"#b8b26436-74c1-47d6-846c-7f8bb113d131\">TODOs</a></li>\n</ul>\n</li>\n<li><a href=\"#c95d764f-fb3b-4bec-a4df-ac1aaba47c8c\">Demo</a></li>\n</ul>\n</div>\n<p>template page</p>\n<p><img src=\"/attach?path=template&amp;file=invalid-pre-proof.png\" alt=\"\" /></p>\n<p>wiki.rs</p>\n<p>A simple wiki created with Rust from scratch.</p>\n<p><img src=\"/attach?path=template&amp;file=./docs/wiki-rs-demo.png\" alt=\"Demo\" /></p>\n<h1 id=\"3d9f7cb0-d48f-4a73-840f-ee94f0f9a000\"><a href=\"/pages?path=template#3d9f7cb0-d48f-4a73-840f-ee94f0f9a000\" title=\"/pages?path=template#3d9f7cb0-d48f-4a73-840f-ee94f0f9a000\"></a>特徴</h1>\n<ul>\n<li>レスポンシブ対応</li>\n<li>ダークモード対応</li>\n<li>数式対応（<code>\\\\(\\\\)</code> で inline equation, <code>\\\\[\\\\]</code> で block）</li>\n<li>ソースコードのシンタックスハイライトが可能</li>\n<li>ソースコードのコピーができるボタンあり</li>\n<li>データベース不要で，rust 環境さえあればすぐに導入可能\n（DB は後から導入するかも知れない．要検討）</li>\n<li>コメントアウト対応（<code>//</code> でコメントアウトする）</li>\n</ul>\n<p>これから対応予定のもの</p>\n<ul>\n<li>ユーザごとのプライベートなページ</li>\n<li>github, youtube などの外部サイトとの連携\n<ul>\n<li>ソースコードや動画の埋め込み表示</li>\n</ul>\n</li>\n</ul>\n<h1 id=\"b9a463a5-0305-4fd6-9204-edc367577d50\"><a href=\"/pages?path=template#b9a463a5-0305-4fd6-9204-edc367577d50\" title=\"/pages?path=template#b9a463a5-0305-4fd6-9204-edc367577d50\"></a>Development</h1>\n<h2 id=\"f53b68f4-3824-4d89-b4ba-7cdb4b5fd2fc\"><a href=\"/pages?path=template#f53b68f4-3824-4d89-b4ba-7cdb4b5fd2fc\" title=\"/pages?path=template#f53b68f4-3824-4d89-b4ba-7cdb4b5fd2fc\"></a>Prerequisties</h2>\n<p>Install Cargo</p>\n<h2 id=\"4147f28e-b236-48ca-8a1f-c947d6c3d418\"><a href=\"/pages?path=template#4147f28e-b236-48ca-8a1f-c947d6c3d418\" title=\"/pages?path=template#4147f28e-b236-48ca-8a1f-c947d6c3d418\"></a>Run</h2>\n<ol>\n<li>\n<p>サンプルの public directory が docs 以下にあるので，それを持ってくる．</p>\n<pre><code class=\"language-sh\">cp -r docs/public .\n</code></pre>\n</li>\n<li>\n<p>cargo で backend を実行する</p>\n<pre><code class=\"language-sh\">cargo run\n</code></pre>\n</li>\n<li>\n<p>and access <a href=\"https://127.0.0.1:8443/\">https://127.0.0.1:8443/</a> on your browser.</p>\n</li>\n</ol>\n<h1 id=\"bc453f1a-37ee-4239-82c6-75dfabf58eea\"><a href=\"/pages?path=template#bc453f1a-37ee-4239-82c6-75dfabf58eea\" title=\"/pages?path=template#bc453f1a-37ee-4239-82c6-75dfabf58eea\"></a>Design</h1>\n<p>とりあえずの architecture:</p>\n<ul>\n<li>model\n<ul>\n<li>page の型宣言をしておく</li>\n<li>markdown から page に変換したりするコードを置いておく</li>\n</ul>\n</li>\n<li>interface adapters :: controllers, presenters, gateways\n<ul>\n<li>ページの更新や取得などを行うコードを書いておく</li>\n</ul>\n</li>\n<li>frameworks and drivers :: web, ui, external interfaces, devices, db</li>\n</ul>\n<p>clean architecture:</p>\n<ul>\n<li>Enterprise business rules :: entities\n<ul>\n<li>page の型宣言をしておく</li>\n</ul>\n</li>\n<li>application business rules :: use cases, interactor\n<ul>\n<li>markdown から page に変換したりするコードを置いておく</li>\n</ul>\n</li>\n<li>interface adapters :: controllers, presenters, gateways\n<ul>\n<li>ページの更新や取得などを行うコードを書いておく</li>\n</ul>\n</li>\n<li>frameworks and drivers :: web, ui, external interfaces, devices, db</li>\n</ul>\n<h1 id=\"ff6045d0-9143-4039-92f1-fa7c638ada38\"><a href=\"/pages?path=template#ff6045d0-9143-4039-92f1-fa7c638ada38\" title=\"/pages?path=template#ff6045d0-9143-4039-92f1-fa7c638ada38\"></a>API design</h1>\n<h2 id=\"cc76e1ba-513d-4ef1-acce-de70baf955dc\"><a href=\"/pages?path=template#cc76e1ba-513d-4ef1-acce-de70baf955dc\" title=\"/pages?path=template#cc76e1ba-513d-4ef1-acce-de70baf955dc\"></a>Front</h2>\n<ul>\n<li>普通にアクセスして見る．</li>\n<li>今見ているページの markdown を編集して，それでページを更新する．\n<ul>\n<li>edit button</li>\n</ul>\n</li>\n<li>新しいページの markdown を編集して，それでページを更新する．\n<ul>\n<li>create button</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"d5c6fb97-0108-4952-8f76-a3fe3e46dc7b\"><a href=\"/pages?path=template#d5c6fb97-0108-4952-8f76-a3fe3e46dc7b\" title=\"/pages?path=template#d5c6fb97-0108-4952-8f76-a3fe3e46dc7b\"></a>Backend API</h2>\n<ul>\n<li>GET <code>/page?path=&lt;Path to the page&gt;</code>\n<ul>\n<li><code>&lt;Path to the page&gt;</code> にある html ページを返す</li>\n<li>サーバ上のファイルから読み込む</li>\n</ul>\n</li>\n<li>GET <code>/edit?path=&lt;Path to the page&gt;</code>\n<ul>\n<li>編集用の markdown を返す</li>\n<li>サーバ上のファイルから読み込む</li>\n</ul>\n</li>\n<li>POST <code>/edit {path:&quot;&lt;Path to the page&gt;&quot;, body: &quot;&lt;The updated markdown&gt;&quot;}</code>\n<ul>\n<li>markdown を投げ，それで <code>&lt;Path to the page&gt;</code> を更新する</li>\n<li>そのページがもともと存在しない場合は新しく作る．</li>\n<li>サーバ上のファイルに書き出しておく</li>\n</ul>\n</li>\n<li>DELETE <code>/edit?path=&lt;Path to the page&gt;</code>\n<ul>\n<li><code>&lt;Path to the page&gt;</code> を消去する</li>\n<li>サーバ上のファイルは消去する</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"c5c52e29-ce86-4194-bf22-588aabd1538d\"><a href=\"/pages?path=template#c5c52e29-ce86-4194-bf22-588aabd1538d\" title=\"/pages?path=template#c5c52e29-ce86-4194-bf22-588aabd1538d\"></a>構成</h2>\n<h3 id=\"d0b1035d-1274-44c3-a22b-8000efc670e2\"><a href=\"/pages?path=template#d0b1035d-1274-44c3-a22b-8000efc670e2\" title=\"/pages?path=template#d0b1035d-1274-44c3-a22b-8000efc670e2\"></a>client-side</h3>\n<pre><code class=\"language-sh\">public/\n├── assets/ # some assets files\n│   ├── dracula.css\n│   └── main.css\n├── edit/ # directory to save markdown files\n├── index.html # the root index.html file\n├── layouts/ # some template html files\n│   ├── edit.html\n│   └── page.html\n└── pages/ # directory to save the transformed html files\n</code></pre>\n<p>現在，\n<code>public/pages/*</code>, <code>public/edit/*</code> は廃止して，\n<code>public/db/*</code> に json ファイルを置くことにしている．</p>\n<ul>\n<li>TODO: 後で上記のファイル構成の方にも反映する．</li>\n</ul>\n<h3 id=\"4166f255-713d-4806-be87-d8f063d32813\"><a href=\"/pages?path=template#4166f255-713d-4806-be87-d8f063d32813\" title=\"/pages?path=template#4166f255-713d-4806-be87-d8f063d32813\"></a>server-side</h3>\n<p>clean architecture を参考にしようともがいている\n（けどそもそも理解できていない）．</p>\n<ul>\n<li>（けどそもそも理解できていない．．．</li>\n</ul>\n<p>参考資料：</p>\n<ul>\n<li><a href=\"https://qiita.com/nrslib/items/a5f902c4defc83bd46b8#%E7%9F%A2%E5%8D%B0%E3%81%AE%E6%96%B9%E5%90%91\" title=\"https://qiita.com/nrslib/items/a5f902c4defc83bd46b8#%E7%9F%A2%E5%8D%B0%E3%81%AE%E6%96%B9%E5%90%91\">https://qiita.com/nrslib/items/a5f902c4defc83bd46b8#%E7%9F%A2%E5%8D%B0%E3%81%AE%E6%96%B9%E5%90%91</a></li>\n<li><a href=\"https://nrslib.com/clean-architecture-with-java/#outline__6_3\" title=\"https://nrslib.com/clean-architecture-with-java/#outline__6_3\">https://nrslib.com/clean-architecture-with-java/#outline__6_3</a></li>\n<li><a href=\"https://gist.github.com/mpppk/609d592f25cab9312654b39f1b357c60\" title=\"https://gist.github.com/mpppk/609d592f25cab9312654b39f1b357c60\">https://gist.github.com/mpppk/609d592f25cab9312654b39f1b357c60</a></li>\n<li><a href=\"https://nrslib.com/clean-architecture-with-java/#outline__6_3\" title=\"https://nrslib.com/clean-architecture-with-java/#outline__6_3\">https://nrslib.com/clean-architecture-with-java/#outline__6_3</a></li>\n</ul>\n<pre><code class=\"language-sh\">src\n├── controllers/ # client と通信する POST API\n│   ├── handle_page.rs\n│   ├── index.rs\n│   └── mod.rs\n├── entities/ # markdown to html converter などの補助関数とか\n│   ├── mod.rs\n│   └── pages.rs\n├── gateways # データベースもどき\n│   ├── mod.rs\n│   └── pages.rs\n├── lib.rs\n├── main.rs\n├── routes.rs\n├── usecases # ページのデータ構造の定義とか\n│   ├── mod.rs\n│   └── pages.rs\n└── util.rs\n</code></pre>\n<h2 id=\"b8b26436-74c1-47d6-846c-7f8bb113d131\"><a href=\"/pages?path=template#b8b26436-74c1-47d6-846c-7f8bb113d131\" title=\"/pages?path=template#b8b26436-74c1-47d6-846c-7f8bb113d131\"></a>TODOs</h2>\n<ul>\n<li><input disabled=\"\" type=\"checkbox\"/>\nclean architecture などをもとにアーキテクチャを再考する．</li>\n<li><input disabled=\"\" type=\"checkbox\"/>\nissue に挙げたものの解決</li>\n</ul>\n<h1 id=\"c95d764f-fb3b-4bec-a4df-ac1aaba47c8c\"><a href=\"/pages?path=template#c95d764f-fb3b-4bec-a4df-ac1aaba47c8c\" title=\"/pages?path=template#c95d764f-fb3b-4bec-a4df-ac1aaba47c8c\"></a>Demo</h1>\n<p><img src=\"/attach?path=template&amp;file=./docs/code-copy-button-demo.png\" alt=\"Demo\" />\n<img src=\"/attach?path=template&amp;file=./docs/demo-diary.png\" alt=\"Demo\" /></p>\n</div>\n      </div>\n    </div>\n  </body>\n\n  <script>\n    function copyToClipboard(text) {\n      const textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n\n      // Avoid scrolling to bottom\n      textArea.style.top = \"0\";\n      textArea.style.left = \"0\";\n      textArea.style.position = \"fixed\";\n\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n\n      document.execCommand(\"copy\");\n\n      textArea.parentNode.removeChild(textArea);\n    }\n\n    window.addEventListener(\"DOMContentLoaded\", () => {\n      // ページの削除\n      const btn_submit = document.getElementById(\"btn-submit-delete\");\n      btn_submit.addEventListener(\"click\", async (e) => {\n        e.preventDefault();\n\n        // フォームの入力値を送信\n        const response = await fetch(\n          \"/edit?\" + new URLSearchParams({ path: \"template\" }),\n          { method: \"DELETE\" }\n        );\n\n        // redirect to the home page\n        window.location = \"/\";\n      });\n\n      // ファイルの添付\n      const btn_select_attach = document.getElementById(\"btn-select-attach\");\n      // const btn_post_attach = document.getElementById(\"btn-post-attach\");\n      // Select your input type file and store it in a variable\n\n      // This will upload the file after having read it\n      const upload = (file) => {\n        const formData = new FormData();\n        formData.append(\"filename\", file);\n\n        fetch(\"/attach?\" + new URLSearchParams({ path: \"template\" }), {\n          // Your POST endpoint\n          method: \"POST\",\n          body: formData, // This is your file object\n        });\n      };\n\n      // Event handler executed when a file is selected\n      const onSelectFile = () => upload(btn_select_attach.files[0]);\n\n      // Add a listener on your input\n      // It will be triggered when a file will be selected\n      btn_select_attach.addEventListener(\"change\", onSelectFile, false);\n\n      // ソースコードをコピーできるボタンの追加\n      // const btn_submit = document.getElementById(\"btn-submit-delete\");\n      const collection = document.getElementsByTagName(\"pre\");\n      for (let cell of collection) {\n        // create a new div element\n        const newDiv = document.createElement(\"div\");\n        newDiv.classList.add(\"code-copy-button\");\n\n        const newI = document.createElement(\"i\");\n        newI.classList.add(\"fa-solid\");\n        newI.classList.add(\"fa-copy\");\n\n        newDiv.appendChild(newI);\n\n        newDiv.addEventListener(\"click\", async (e) => {\n          e.target.classList.add(\"copied\");\n          e.preventDefault();\n\n          const code = cell.innerText;\n          console.log(code);\n          copyToClipboard(code);\n          setTimeout(() => {\n            console.log(\"Delayed for 5 second.\");\n            e.target.classList.remove(\"copied\");\n          }, 3000);\n        });\n\n        cell.appendChild(newDiv);\n      }\n    });\n  </script>\n</html>\n","modified_rfc3339":"2022-05-09T01:46:47.473021+00:00"}