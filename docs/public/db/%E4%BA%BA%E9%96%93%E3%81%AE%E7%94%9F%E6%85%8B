{"path":"人間の生態","name":"人間の生態","markdown":"# 人間は愚かな生物！\n\n最近の猫は優秀なので OS も書けるし，コンパイラも書ける．\n\n## 吾輩は猫である．\n\n猫でも python が書けるのに，書けない人間もいる？\n\n```python\n# Python Program to find the factors of a number\n\n# This function computes the factor of the argument passed\ndef print_factors(x):\n   print(\"The factors of\",x,\"are:\")\n   for i in range(1, x + 1):\n       if x % i == 0:\n           print(i)\n\nnum = 320\n\nprint_factors(num)\n```\n\n結論：**猫の場合も**，猫による．\n\n## 猫でも数学ができる\n\nWhen \\(a \\ne 0 \\), there are two solutions to \n\\(ax^2 + bx + c = 0\\) and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$\n\n## リンクとリスト\n\nリンクを貼ったりリストを作ったりできる\n\n----\n\n[Is Parallel Programming Hard, And, If So, What Can You Do About It?](https://arxiv.org/pdf/1701.00854.pdf)\nを冒頭 110 ページくらいをザーッと流し読みした．\n- （かなり初歩的な部分から）相当わかりやすく書かれている印象を受けた．確かに並列をやるなら眺めておくべきと言う感じではある．\n- appendix を除くと，全部で 400 ページ（そんなに多くない）．ミニクイズの答えもちゃんとついてきているし，暇つぶし感覚でもう少し読んでみようかなと思っております．\n- http://liburcu.org/\nhogehoge\n\nすでに囲まれているリンク\n<http://liburcu.org/>\n\n囲まれていないリンク\nhttp://liburcu.org/\n","html":"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n\n    <!-- google font -->\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin />\n    <link\n      href=\"https://fonts.googleapis.com/css2?family=Fira+Sans:wght@300&family=JetBrains+Mono:wght@300&family=Noto+Sans+JP:wght@300&display=swap\"\n      rel=\"stylesheet\"\n    />\n\n    <!-- highlight.js -->\n    <link rel=\"stylesheet\" href=\"/files/assets/dracula.css\" />\n    <script src=\"//cdnjs.cloudflare.com/ajax/libs/highlight.js/11.5.1/highlight.min.js\"></script>\n    <script>\n      hljs.highlightAll();\n    </script>\n\n    <!-- mathjax -->\n    <script src=\"https://polyfill.io/v3/polyfill.min.js?features=es6\"></script>\n    <script\n      type=\"text/javascript\"\n      id=\"MathJax-script\"\n      async\n      src=\"https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-chtml.js\"\n    ></script>\n\n    <!-- custom css -->\n    <link rel=\"stylesheet\" href=\"/files/assets/main.css\" />\n\n    <title>人間の生態</title>\n  </head>\n  <body>\n    <div class=\"wrapper\">\n      <div class=\"wrapper\">\n        <div class=\"site-header\">\n          <div class=\"site-title\">人間の生態</div>\n        </div>\n      </div>\n      <div class=\"wrapper header-menu\">\n        <a href=\"/\" class=\"button\">HOME</a>\n        <a href=\"/edit?path=人間の生態\" class=\"button\">Update</a>\n        <form action=\"/edit\" method=\"DELETE\">\n          <input\n            type=\"submit\"\n            id=\"btn-submit-delete\"\n            name=\"btn-submit-delete\"\n            value=\"Delete\"\n            class=\"button\"\n          />\n        </form>\n      </div>\n      <div class=\"sidebar\">\n        <div class=\"wrapper\">\n          <ul>\n            {{ INDEX_UL }}\n          </ul>\n        </div>\n      </div>\n      <div class=\"body-contents wrapper\"><h1>人間は愚かな生物！</h1>\n<p>最近の猫は優秀なので OS も書けるし，コンパイラも書ける．</p>\n<h2>吾輩は猫である．</h2>\n<p>猫でも python が書けるのに，書けない人間もいる？</p>\n<pre><code class=\"language-python\"># Python Program to find the factors of a number\n\n# This function computes the factor of the argument passed\ndef print_factors(x):\n   print(&quot;The factors of&quot;,x,&quot;are:&quot;)\n   for i in range(1, x + 1):\n       if x % i == 0:\n           print(i)\n\nnum = 320\n\nprint_factors(num)\n</code></pre>\n<p>結論：<strong>猫の場合も</strong>，猫による．</p>\n<h2>猫でも数学ができる</h2>\n<p>When \\(a \\ne 0 \\), there are two solutions to \n\\(ax^2 + bx + c = 0\\) and they are\n$$x = {-b \\pm \\sqrt{b^2-4ac} \\over 2a}.$$</p>\n<h2>リンクとリスト</h2>\n<p>リンクを貼ったりリストを作ったりできる</p>\n<hr />\n<p><a href=\"https://arxiv.org/pdf/1701.00854.pdf\">Is Parallel Programming Hard, And, If So, What Can You Do About It?</a>\nを冒頭 110 ページくらいをザーッと流し読みした．</p>\n<ul>\n<li>（かなり初歩的な部分から）相当わかりやすく書かれている印象を受けた．確かに並列をやるなら眺めておくべきと言う感じではある．</li>\n<li>appendix を除くと，全部で 400 ページ（そんなに多くない）．ミニクイズの答えもちゃんとついてきているし，暇つぶし感覚でもう少し読んでみようかなと思っております．</li>\n<li><a href=\"http://liburcu.org/\" title=\"http://liburcu.org/\">http://liburcu.org/</a>\nhogehoge</li>\n</ul>\n<p>すでに囲まれているリンク\n<a href=\"http://liburcu.org/\">http://liburcu.org/</a></p>\n<p>囲まれていないリンク\n<a href=\"http://liburcu.org/\" title=\"http://liburcu.org/\">http://liburcu.org/</a></p>\n</div>\n    </div>\n  </body>\n\n  <script>\n    function copyToClipboard(text) {\n      const textArea = document.createElement(\"textarea\");\n      textArea.value = text;\n\n      // Avoid scrolling to bottom\n      textArea.style.top = \"0\";\n      textArea.style.left = \"0\";\n      textArea.style.position = \"fixed\";\n\n      document.body.appendChild(textArea);\n      textArea.focus();\n      textArea.select();\n\n      document.execCommand(\"copy\");\n\n      textArea.parentNode.removeChild(textArea);\n    }\n\n    window.addEventListener(\"DOMContentLoaded\", () => {\n      // 送信ボタンのHTMLを取得\n      const btn_submit = document.getElementById(\"btn-submit-delete\");\n      btn_submit.addEventListener(\"click\", async (e) => {\n        e.preventDefault();\n\n        // フォームの入力値を送信\n        const response = await fetch(\n          \"/edit?\" + new URLSearchParams({ path: \"TITLE\" }),\n          { method: \"DELETE\" }\n        );\n\n        // redirect to the home page\n        window.location = \"/\";\n      });\n\n      // ソースコードをコピーできるボタンの追加\n      // const btn_submit = document.getElementById(\"btn-submit-delete\");\n      const collection = document.getElementsByTagName(\"pre\");\n      for (let cell of collection) {\n        // create a new div element\n        const newDiv = document.createElement(\"div\");\n        newDiv.classList.add(\"code-copy-button\");\n\n        const newI = document.createElement(\"i\");\n        newI.classList.add(\"fa-solid\");\n        newI.classList.add(\"fa-copy\");\n\n        newDiv.appendChild(newI);\n\n        newDiv.addEventListener(\"click\", async (e) => {\n          e.target.classList.add(\"copied\");\n          e.preventDefault();\n\n          const code = cell.innerText;\n          console.log(code);\n          copyToClipboard(code);\n          setTimeout(() => {\n            console.log(\"Delayed for 5 second.\");\n            e.target.classList.remove(\"copied\");\n          }, 3000);\n        });\n\n        cell.appendChild(newDiv);\n      }\n    });\n  </script>\n</html>\n","modified_rfc3339":"2022-05-07T04:14:21.741879+00:00"}